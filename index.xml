<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leone</title>
    <link>https://leonewu.github.io/</link>
    <description>Recent content on Leone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
	<atom:link href="https://leonewu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://leonewu.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://leonewu.github.io/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>关于箭头函数和react</title>
      <link>https://leonewu.github.io/post/arrow-function/</link>
      <pubDate>Mon, 11 Mar 2019 17:45:00 +0800</pubDate>
      
      <guid>https://leonewu.github.io/post/arrow-function/</guid>
      <description>问题 为什么react中有一部分函数要手动绑定this(bind) 为什么react中箭头函数能替代手动绑定this 为什么react中要手动绑定</description>
    </item>
    
    <item>
      <title>javascript中的类和继承</title>
      <link>https://leonewu.github.io/post/js-class-extend/</link>
      <pubDate>Wed, 06 Mar 2019 10:22:03 +0800</pubDate>
      
      <guid>https://leonewu.github.io/post/js-class-extend/</guid>
      <description>基本概念 原型和原型链 显式原型: prototype 隐式原型: __proto__ 每一个对象都有 __proto__ 属性, 只有函数才有 prototype 属性 对象的__proto__属性指向其构造函数的protot</description>
    </item>
    
    <item>
      <title>网络请求和状态管理</title>
      <link>https://leonewu.github.io/post/presentation/</link>
      <pubDate>Wed, 06 Mar 2019 10:22:03 +0800</pubDate>
      
      <guid>https://leonewu.github.io/post/presentation/</guid>
      <description>网络请求和状态管理 src/services/model 存放请求相关的文件 src/models 存放状态相关文件 网络请求 @umijs/plugin-request 基于 umi-request 和 ahooks 的 useRequest 提供了一套统一的网络请求和错误处理方案 umi-request 和 axios 的区别 axios axios 浏览器</description>
    </item>
    
    <item>
      <title>算法-扑克牌问题</title>
      <link>https://leonewu.github.io/post/algorithm/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://leonewu.github.io/post/algorithm/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>